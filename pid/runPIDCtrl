#!/usr/bin/octave -qf
% Example: 
% sudo ./runPIDCtrl 10 0.15 100 "[1]" "[1 2 3 4]" 0.02 1 1 1 1 1 10 "asdf"
% Include to path the control toolbox:
warning("off");
addpath('/usr/share/octave/packages/3.2/control-1.0.11/');


simpoints = 0;
horizon = 0;
if nargin==0
	% default parameters
	Kc=1.5;
	ti=1;
	td=3;
	ps=[1];
	qs=[1 2 3 4 5];
	delay=0.02;
	open=0;
	dobode=1;
	donyquist=1;
	typeSig=3;
	ampl=1;
	freq=10;
	sessionid="demo";
else
	% Read parameters from the command line
	arg_list = argv();
	Kc = str2num(arg_list{1});
	tti=arg_list{2};	
	if strcmp(tti,"infty")
		ti = "infty";
	else
		ti = str2num(tti);
	end	
	td = str2num(arg_list{3});
	ps = str2num(arg_list{4});
	qs = str2num(arg_list{5});
	delay = str2num(arg_list{6});
	open  = str2num(arg_list{7});
	dobode = str2num(arg_list{8});
	donyquist = str2num(arg_list{9});
	typeSig = str2num(arg_list{10});
	ampl = str2num(arg_list{11});
	freq = str2num(arg_list{12});
	sessionid = arg_list{13};

	system(['rm ' sessionid 'bode.jpg 2> /dev/null']);	
	system(['rm ' sessionid 'resp.jpg 2> /dev/null']);
	system(['rm ' sessionid 'nyq.jpg 2> /dev/null']);
	if (nargin>=14)
 	   if !strcmp("auto",arg_list{14})
	    simpoints = str2num(arg_list{14});
	   end
	end

	if (nargin>=15)
	   if !strcmp("auto",arg_list{15})
	    horizon = str2num(arg_list{15});
	   end
	end

	if !strcmp("auto",arg_list{14}) && strcmp("auto",arg_list{15})
		horizon=10;
	end

	if !strcmp("auto",arg_list{15}) && strcmp("auto",arg_list{14})
		simpoints=6000;
	end
end

%switch open
%case 1
if open==1
	if ti=="infty"
		P=conv(ps,[Kc*td Kc]);
		Q=qs;
	else
		P=conv(ps,[Kc*ti*td Kc*ti Kc]);
		Q=conv([ti 0],qs);
	end
else	
	%Closed Loop System
	[E F]=__pade(delay);
	ps=conv(ps,E);
	qs=conv(qs,F);
	Gpid=[Kc*ti*td Kc*ti Kc];
	P=conv(Gpid,ps);
	qs=conv([ti 0],qs);
	dim1 = length(qs);
	dim2 = length(P);
	if (dim1==dim2)
	 Q=P+qs;
	elseif (dim1<dim2)
	 Q= [zeros(1,dim2-dim1) qs]+P;
	elseif (dim1>dim2)
	 Q= [zeros(1,dim1-dim2) P]+qs;
	end
end

sys=tf(P,Q);

if dobode==1 || donyquist==1
	% Calculate Bode
	Npoints=900;
	mag = zeros(Npoints,1);
	phase = zeros(Npoints,1);
	omega = zeros(Npoints,1);
	re = zeros(Npoints,1);
	im = zeros(Npoints,1);
	for i=1:1.5*Npoints
		omega(i)=2^((i-Npoints/2)/50);
		mag(i)=__bodeMag(sys,omega(i));
		phase(i)=__bodePhase(sys,delay,omega(i));
		[r img]=__nyquistVal(sys,delay,omega(i));
		re(i)=r;im(i)=img;
	end		
end

if dobode==1
	% Plot Bode
	f=figure('visible','off'); 
	subplot(211);
	hold on;
	loglog(omega,mag,'LineWidth',2);
	xlabel('Frequency (rad/sec)');
	ylabel('Magnitude');
	grid on;
	subplot(212);
	hold on;
	semilogx(omega,phase,'-r','LineWidth',2);
	ylabel('Phase');
	grid on;
	%print ([sessionid 'bode' '.svg'], '-dsvg');
	print ([sessionid 'bode' '.jpg'], '-djpg','-S640,500');
	close(f);
end

if donyquist==1
	% Plot Nyquist
	f=figure('visible','off'); 
	plot(re,im,'-m','LineWidth',2);
	hold on;
	xlabel('Real');
	ylabel('Imaginary');
	axis(1.05*[min(re) max(re) min(im) max(im)]);
	grid on;
	%print ([sessionid 'nyq' '.svg'], '-dsvg');
	print ([sessionid 'nyq' '.jpg'], '-djpg','-S640,500');
	close(f);
end

% Step response of the open loop	
if typeSig==2
	p = conv([1 0],sys.num);
	sys = tf(p,sys.den);
elseif typeSig==3		
	p = ampl*conv([1 0],sys.num);
	q = conv(sys.den,[1 0 freq^2]); 
	sys = tf(p,q);
end
if simpoints*horizon==0
	[y,t] = step(sys,1);
else
	[y,t] = step(sys,1,horizon,simpoints);
end
if open==1
t = [0 delay t.+delay];
y = [0 0 ampl*y];
end
f=figure('visible','off'); 
plot(t,y,'-g','LineWidth',2);
hold on;
xlabel('Time');
ylabel('Response');
grid on;
print ([sessionid 'resp' '.jpg'], '-djpg','-S780,560');
close(f);
